// 여러 종류의 객체(object)를  배열로 다루기
// Product배열로 구입한 제품들을 저장할 수 있도록 했지만, 배열의 크기를 10으로 설정(무한정 크게 할 수는 없다.)
package ch7;

class Product2 {
	
	int price;			// 제품의 가격
	int bonusPoint;		// 제품구매시 제공하는 보너스 점수
	
	Product2(int price){
		this.price = price;
		bonusPoint = (int)(price/10.0);
	}
	Product2() {}		// 기본 생성자
}

class Tv4 extends Product2 {
	
	Tv4() { super(100); }	// 조상클래스 생성자 Product를 호출한다.
	public String toString() { return "TV"; }
	
}

class Computer2 extends Product2 {
	
	Computer2() { super(200); }	// 조상클래스 생성자 Product를 호출한다.
	public String toString() { return "Computer"; }
	
}

class Audio extends Product2 {
	
	Audio() { super(50); }	// 조상클래스 생성자 Product를 호출한다.
	public String toString() { return "TV"; }
	
}

class Buyer2 {
	
	int money = 1000;		// 소유금액
	int bonusPoint = 0;		// 보너스 점수
	Product2[] item = new Product2[10];  // 구입한 제품을 저장하기 위한 배열
	int i = 0;
	
	void buy(Product2 p) {
		if(money < p.price) {
			System.out.println("잔액이 부족하여 물건을 살 수 없습니다.");
		}
		money -= p.price;			// 가진 돈에서 구입한 제품의 가격을 뺸다.
		bonusPoint += p.bonusPoint; // 제품의 보너스 점수를 추가한다.
		item[i++] = p;				// 제품을 Product[] item에 저장한다.
		System.out.println(p + "을/를 구입하셨습니다.");
	}
	
	void summary() {				// 구매한 물품에 대한 정보를 요약해서 보여 준다.
		int sum = 0;				// 구입한 물품의 가격합계
		String itemList = "";		// 구입한 물품목록
	
	// 반복문을 이용해서 구입한 물품의 총 가격과 목록을 만든다.
		for(int i=0;i<item.length;i++) {
			if(item[i]==null) break;
			sum += item[i].price;
			itemList += item[i] + ", ";
		}
		System.out.println("구입하신 물품의 총금액은 " + sum + "만원입니다.");
		System.out.println("구입하신 제품은 " + itemList + "입니다.");
	}

}

public class PolyArgumentTest2 {

	public static void main(String[] args) {
		
		Buyer2 b = new Buyer2();
		
		b.buy(new Tv4());
		b.buy(new Computer2());
		b.buy(new Audio());
		b.summary();
		
	}

}
